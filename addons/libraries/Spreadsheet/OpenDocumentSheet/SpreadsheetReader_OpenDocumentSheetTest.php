<?php
// Call SpreadsheetReader_ExcelTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "SpreadsheetReader_OpenDocumentSheetTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once dirname(__FILE__) . '/SpreadsheetReader_OpenDocumentSheet.php';

/**
 * Test class for SpreadsheetReader_OpenDocumentSheet.
 * Generated by PHPUnit_Util_Skeleton on 2007-01-26 at 08:50:15.
 */
class SpreadsheetReader_OpenDocumentSheetTest extends PHPUnit_Framework_TestCase {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("SpreadsheetReader_OpenDocumentSheetTest");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    public $xlsReader;
    /**
     * Sets up the fixture, for example, open a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp() {
        $this->xlsReader = new SpreadsheetReader_OpenDocumentSheet;
    }

    /**
     * Tears down the fixture, for example, close a network connection.
     * This method is called after a test is executed.
     *
     * @access protected
     */
    protected function tearDown() {
    }

    /**
     * case: 檔案不存在。
     * result: FALSE
     *
     * @test
     */
    public function ExcelFileIsNotExisted() {
        $xlsFilePath = '';
        $sheets = $this->xlsReader->read($xlsFilePath);
        $this->assertFalse($sheets);
    }

    /**
     * case: Not an excel file
     * result: FALSE
     *
     * @test
     */
    public function FileIsNotAnExcelFile() {
        $xlsFilePath = __FILE__;
        $sheets = $this->xlsReader->read($xlsFilePath);
        $this->assertFalse($sheets);
    }

    /**
     * case: 讀取 test.xls
     * result:
     *  2 sheets.
     *  128 rows of first sheet.
     *  38 rows of second sheet.
     *  11 columns of first row of first sheet.
     *  Row 4 of first sheet contains value '324203026'
     *  Value of B:38 of second sheet is 170292.
     *
     * @test
     */
    public function ReadFromExcelFile() {
        $xlsFilePath = 'test.ods';
        $sheets = $this->xlsReader->read($xlsFilePath);
        $this->assertEquals(2, count($sheets));
        $this->assertEquals(130, count($sheets[0]));
        $this->assertEquals(38, count($sheets[1]));
        $this->assertEquals(11, count($sheets[0][0]));
        $this->assertContains('324203026', $sheets[0][3]);
        $columnB = ord('B') - ord('A');
        $this->assertEquals(170292, $sheets[1][37][$columnB]);
    }

    /**
     * case: 讀取 test.ods AS XMLString.
     * result:
     *  A XML String.
     *
     * @test
     */
    public function ReadExcelFileToXmlString() {
        $xlsFilePath = 'test.ods';
        $xmlString = $this->xlsReader->read($xlsFilePath, 'string');
        $this->assertTrue(strpos($xmlString, '<?xml ') == 0);
    }
}

// Call SpreadsheetReader_OpenDocumentSheet::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "SpreadsheetReader_OpenDocumentSheetTest::main") {
    SpreadsheetReader_OpenDocumentSheetTest::main();
}
?>
